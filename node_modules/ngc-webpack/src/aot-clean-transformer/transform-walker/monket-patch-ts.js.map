{"version":3,"file":"monket-patch-ts.js","sourceRoot":"","sources":["../../../../src/aot-clean-transformer/transform-walker/monket-patch-ts.ts"],"names":[],"mappings":";;AAAA,+BAAiC;AACjC,+BAAiC;AAEjC,4CAA4C;AAC5C,uDAAuD;AACvD,qDAAqD;AAErD,qEAAqE;AAErE,IAAM,mBAAmB,GAAG,EAAE,CAAC,oBAAoB,CAAC,CAAC;AACrD,4BAA4B,IAAa;IACvC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACpE,CAAC;AAED,yBAAyB,IAAa;IACpC,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS;WAC/B,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,0BAA0B,IAAa;IACrC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,KAAK,EAAE,CAAC,UAAU,CAAC,gBAAgB;YACjC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAuB,IAAK,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;QACpF,KAAK,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC;QACrC,KAAK,EAAE,CAAC,UAAU,CAAC,WAAW;YAC5B,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAA8B,IAAK,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IACzF,CAAC;AACH,CAAC;AAED,gCAAgC,IAAa;IAC3C,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACzD,CAAC;AAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,EAAE,CAAC,oBAAoB,CAAC,GAAG,kBAAkB,CAAC;IAC9C,EAAE,CAAC,iBAAiB,CAAC,GAAG,eAAe,CAAC;IACxC,EAAE,CAAC,kBAAkB,CAAC,GAAG,gBAAgB,CAAC;IAC1C,EAAE,CAAC,wBAAwB,CAAC,GAAG,sBAAsB,CAAC;AACxD,CAAC","sourcesContent":["import * as ts from 'typescript';\nimport * as semver from 'semver';\n\n// Patching TS 2.4.2 and lower due to a bug.\n// https://github.com/Microsoft/TypeScript/issues/17384\n// https://github.com/Microsoft/TypeScript/pull/17387\n\n// TODO: When removing this code also remove semver and @types/semver\n\nconst _nodeCanBeDecorated = ts['nodeCanBeDecorated'];\nfunction nodeCanBeDecorated(node: ts.Node): boolean {\n  return _nodeCanBeDecorated(node.parent ? node : node['original']);\n}\n\nfunction nodeIsDecorated(node: ts.Node): boolean {\n  return node.decorators !== undefined\n    && nodeCanBeDecorated(node);\n}\n\nfunction childIsDecorated(node: ts.Node): boolean {\n  switch (node.kind) {\n    case ts.SyntaxKind.ClassDeclaration:\n      return ts['forEach']((<ts.ClassDeclaration>node).members, nodeOrChildIsDecorated);\n    case ts.SyntaxKind.MethodDeclaration:\n    case ts.SyntaxKind.SetAccessor:\n      return ts['forEach']((<ts.FunctionLikeDeclaration>node).parameters, nodeIsDecorated);\n  }\n}\n\nfunction nodeOrChildIsDecorated(node: ts.Node): boolean {\n  return nodeIsDecorated(node) || childIsDecorated(node);\n}\n\nif (semver.lte(ts.version, '2.4.2')) {\n  ts['nodeCanBeDecorated'] = nodeCanBeDecorated;\n  ts['nodeIsDecorated'] = nodeIsDecorated;\n  ts['childIsDecorated'] = childIsDecorated;\n  ts['nodeOrChildIsDecorated'] = nodeOrChildIsDecorated;\n}\n\n"]}